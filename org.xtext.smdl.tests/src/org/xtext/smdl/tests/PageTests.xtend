/*
 * generated by Xtext 2.10.0
 */
package org.xtext.smdl.tests

import com.google.inject.Inject
import org.eclipse.xtext.junit4.InjectWith
import org.eclipse.xtext.junit4.XtextRunner
import org.eclipse.xtext.junit4.util.ParseHelper
import org.junit.Assert
import org.junit.Test
import org.junit.runner.RunWith
import org.xtext.smdl.smdl.Book
import org.eclipse.xtext.junit4.validation.ValidationTestHelper
import org.xtext.smdl.smdl.SmdlPackage

@RunWith(XtextRunner)
@InjectWith(SmdlInjectorProvider)
class PageTests {

	@Inject extension
	ParseHelper<Book> parseHelper
	
	@Inject extension
	ValidationTestHelper validation;

	def void loadPages() {
		var result = '''
book
  title "Book title"
  description "Book long description"
  quire 
    support "parchment"
    page (2) 
      description "First two pages all right"
    end
    page (2)
      mutilated
      support "paper"
      description "Could not be shipped originally"
    end
  end
end
		'''.parse
		
		var book = new org.xtext.smdl.generator.Book(result)
		var quires = book.getQuires()
		var pages = quires.get(0).getPages()
		Assert::assertEquals(1, quires.size())
		Assert::assertEquals(1, pages.size())
	}

	@Test 
	def void loadMultiplePages() {
		var result = '''
book
  key "value"
  quire 
    page end
    page(2) end
    page end
  end

  quire (2)
    page (2) end
  end
end
		'''.parse
		
		var book = new org.xtext.smdl.generator.Book(result)
		var quires = book.getQuires()
		Assert::assertEquals(3, quires.size())

		var pages = quires.get(0).getPages()
		Assert::assertEquals(4, pages.size())

		pages = quires.get(1).getPages()
		Assert::assertEquals(2, pages.size())

		pages = quires.get(1).getPages()
		Assert::assertEquals(2, pages.size())
	}

}
