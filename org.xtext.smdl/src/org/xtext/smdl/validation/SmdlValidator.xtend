/*
 * generated by Xtext 2.10.0
 */
package org.xtext.smdl.validation

import org.eclipse.xtext.validation.Check
import org.xtext.smdl.smdl.SmdlPackage
import java.util.HashSet
import org.xtext.smdl.smdl.Binding
import org.xtext.smdl.smdl.Book
import org.xtext.smdl.smdl.Page
import org.xtext.smdl.smdl.Content
import org.xtext.smdl.smdl.Guard
import org.xtext.smdl.smdl.Quire

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class SmdlValidator extends AbstractSmdlValidator {
	
	@Check
	def checkBookAttributes(Book book) {
		var attrs = book.getAttrs().map[ a | a.name ];
		var set = new HashSet<String>(attrs);
		if (set.size() != attrs.size())
			error('Repeated attributes in Book', book, SmdlPackage::eINSTANCE.getBook_Attrs())
	}

	@Check
	def checkContentAttributes(Content content) {
		var attrs = content.getAttrs().map[ a | a.name ];
		var set = new HashSet<String>(attrs);
		if (set.size() != attrs.size())
			error('Repeated attributes in Content', content, SmdlPackage::eINSTANCE.getContent_Attrs())
	}

	@Check
	def checkBindingAttributes(Binding binding) {
		var attrs = binding.getAttrs().map[ a | a.name ];
		var set = new HashSet<String>(attrs);
		if (set.size() != attrs.size())
			error('Repeated attributes in Binding', binding, SmdlPackage::eINSTANCE.getBinding_Attrs())
	}

	@Check
	def checkPageAttributes(Page page) {
		var attrs = page.getAttrs().map[ a | a.name ];
		var set = new HashSet<String>(attrs);
		if (set.size() != attrs.size())
			error('Repeated attributes in Page', page, SmdlPackage::eINSTANCE.getPage_Attrs())
	}

	@Check
	def checkBookAttributes(Guard guard) {
		var attrs = guard.getAttrs().map[ a | a.name ];
		var set = new HashSet<String>(attrs);
		if (set.size() != attrs.size())
			error('Repeated attributes in Book', guard, SmdlPackage::eINSTANCE.getBook_Attrs())
	}

	@Check
	def checkQuireAttributes(Quire quire) {
		var attrs = quire.getAttrs().map[ a | a.name ];
		var set = new HashSet<String>(attrs);
		if (set.size() != attrs.size())
			error('Repeated attributes in Quire', quire, SmdlPackage::eINSTANCE.getQuire_Attrs())
	}

	@Check
	def checkAllowedAttributes(Quire quire) {
		var attrs = quire.getAttrs().map[ a | a.name ];
		var set = new HashSet<String>(attrs);
		if (set.size() != attrs.size())
			error('Repeated attributes in Quire', quire, SmdlPackage::eINSTANCE.getQuire_Attrs())
	}
}
